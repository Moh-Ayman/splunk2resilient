#Splunk 2 Resilient Configuration Options
#See README.txt for additional information

[system]
## Overall System Settings
#Defualt priority level on generated tickets if not in ticket: (CRITICAL|HIGH|MEDIUM|LOW|TEST)
dplevel = LOW
#Display of Splunk Table data, Vertical (False) or Horizontal (True), default of false for Vertical
splunktablelayout = False
#When processing Splunk Query data for display, line break on newlines (True) or break on Pipes (False)
splunkquerybreak = True

[logger]
## Splunk2Resilient logger options
#Output format, for more options see: https://docs.python.org/2/library/logging.html#logrecord-attributes
format 		= %(asctime)s %(levelname)-s %(name)s:%(lineno)d - %(message)s
path 		= /tmp/
logname 	= s2r.log
#Max file size in bytes before next log file is created
maxfilesize = 64
#Max number of log files to keep
maxcopys 	= 5
#Logger Handle - Make unique if using multiple
handle 		= s2r
#Include hostname in logger handle?
hostname	= True
#Defualt Logging Level is 20 for INFO, 
# - for more options see: https://docs.python.org/2/library/logging.html#logging-levels
level 		= 20


[resilient]
## Resilient connection options
host		= examplehost.com
#Port to connect to system, must use TLS
port		= 443
user		= resilientuser@examplehost.com
pass 		= secr3tpassw0rd
verifyssl 	= False
#Timeout in seconds, failure to communicate throws exception
timeout 	= 10
orgname 	= Example Org Name
proxy 		= 


[recovery]
## Incase of failure when sending alerts to Resilient
sendemail	= False
recipient	= emailaddr@examplehost.com
sender 		= emailaddr@examplehost.com
mailrelay	= 127.0.0.1
#If a failure occures with the REST communication, should we Queue the events?
queuemsgs	= True
#Directory to store s2rfailure queue files
queuedir	= /tmp/
#When the Resilient ticketing system comes backonline, should we try re-sending the queued events?
sendonup	= True