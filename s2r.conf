#Splunk 2 Resilient Configuration Options
#See README.txt for additional information

[system]
## Overall System Settings
#Defualt priority level on generated tickets if not in ticket: (CRITICAL|HIGH|MEDIUM|LOW|TEST)
dplevel = LOW


[logger]
## Splunk2Resilient logger options
#Output format, for more options see: https://docs.python.org/2/library/logging.html#logrecord-attributes
format 		= %(asctime)s %(levelname)-s %(name)s:%(lineno)d - %(message)s
path 		= /tmp/
logname 	= s2r.log
#Max file size in bytes before next log file is created
maxfilesize = 64
#Max number of log files to keep
maxcopys 	= 5
#Logger Handle - Make unique if using multiple
handle 		= s2r
#Include hostname in logger handle?
hostname	= True
#Defualt Logging Level is 20 for INFO, 
# - for more options see: https://docs.python.org/2/library/logging.html#logging-levels
level 		= 20


[resilient]
## Resilient connection options
host		= example.com
#Port to connect to system, must use TLS
port		= 443
user		= splunkalerts@example.com
pass 		= splunkpassword
verifyssl 	= False
#Timeout in seconds, failure to communicate throws exception
timeout 	= 15
orgname 	= My Orgs Name example
proxy 		= 

[recovery]
## Incase of failure when sending alerts to Resilient
sendemail	= False
recipient	= s2r@example.com
sender 		= s2r@example.com
mailrelay	= mail.example.com
#If a failure occures with the REST communication, should we Queue the events?
queuemsgs	= True
#Directory to store s2rfailure queue files
queuedir	= /tmp/
#When the Resilient ticketing system comes backonline, should we try re-sending the queued events?
sendonup	= True